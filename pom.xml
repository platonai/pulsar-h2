<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--<groupId>com.h2database</groupId>-->
    <!--<artifactId>h2</artifactId>-->
    <!--<version>1.4.196-SNAPSHOT</version>-->

    <parent>
        <groupId>ai.platon</groupId>
        <artifactId>platon</artifactId>
        <version>3</version>
    </parent>

    <name>Pulsar H2 Database</name>
    <groupId>ai.platon.pulsar</groupId>
    <artifactId>pulsar-h2</artifactId>
    <version>1.5.3-SNAPSHOT</version>

    <url>http://www.h2database.com</url>
    <description>H2 Database Engine, extended for Web data processing</description>

    <licenses>
        <license>
            <name>MPL 2.0 or EPL 1.0</name>
            <url>http://h2database.com/html/license.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

<!--    <scm>-->
<!--        <connection>scm:git:https://github.com/h2database/h2database</connection>-->
<!--        <url>https://github.com/h2database/h2database</url>-->
<!--    </scm>-->

    <scm>
        <connection>scm:git:https://github.com/platonai/pulsar-h2.git</connection>
        <developerConnection>scm:git:https://github.com/platonai/pulsar-h2.git</developerConnection>
        <url>https://github.com/platonai/pulsar-h2</url>
    </scm>

    <developers>
        <developer>
            <id>thomas.tom.mueller</id>
            <name>Thomas Mueller</name>
            <email>thomas.tom.mueller at gmail dot com</email>
        </developer>

        <developer>
            <id>pulsar-h2.creator</id>
            <name>Vincent Zhang</name>
            <email>galaxyeye at live dot cn</email>
        </developer>
    </developers>

    <properties>
        <skipTests>true</skipTests>
        <derby.version>10.10.1.1</derby.version>
        <osgi.version>4.2.0</osgi.version>
        <slf4j.version>1.6.0</slf4j.version>

        <tools.jar>${java.home}/../lib/tools.jar</tools.jar>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <!-- START COMPILE DEPENDENCIES !-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>7.1.0</version>
            <!--<version>[7.1.0,)</version>-->
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.enterprise</artifactId>
            <version>${osgi.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts-core</artifactId>
            <version>1.14.0</version>
        </dependency>

        <!-- END COMPILE DEPENDENCIES !-->


        <!-- START TEST DEPENDENCIES !-->
        <!--<dependency>-->
        <!--<groupId>org.slf4j</groupId>-->
        <!--<artifactId>slf4j-simple</artifactId>-->
        <!--<version>${slf4j.version}</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>${derby.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>${derby.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbynet</artifactId>
            <version>${derby.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4.1209.jre6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- END TEST DEPENDENCIES !-->

        <!--  JDK dependencies  -->
        <!--<dependency>-->
            <!--<groupId>com.sun</groupId>-->
            <!--<artifactId>tools</artifactId>-->
            <!--<version>1.7</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${tools.jar}</systemPath>-->
        <!--</dependency>-->
    </dependencies>

    <!-- The test code creates proxy files using javac or h2.jar. Through maven we need to tell it
         where to possibly find h2.jar and annoyingly its called classes.jar on OSX -->
    <!--<profiles>-->
        <!--<profile>-->
            <!--<id>default-tools.jar</id>-->
            <!--<activation>-->
                <!--<file>-->
                    <!--<exists>${java.home}/../lib/tools.jar</exists>-->
                <!--</file>-->
            <!--</activation>-->
            <!--<properties>-->
                <!--<tools.jar>${java.home}/../lib/tools.jar</tools.jar>-->
            <!--</properties>-->
        <!--</profile>-->
        <!--<profile>-->
            <!--<id>default-tools.jar-mac</id>-->
            <!--<activation>-->
                <!--<file>-->
                    <!--<exists>${java.home}/../Classes/classes.jar</exists>-->
                <!--</file>-->
            <!--</activation>-->
            <!--<properties>-->
                <!--<tools.jar>${java.home}/../Classes/classes.jar</tools.jar>-->
            <!--</properties>-->
        <!--</profile>-->
    <!--</profiles>-->

    <build>
        <defaultGoal>install</defaultGoal>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <!-- Resources do not follow maven project layout. We need to manually copy them -->
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.prop</include>
                    <include>**/*.png</include>
                    <include>**/*.jsp</include>
                    <include>**/*.ico</include>
                    <include>**/*.gif</include>
                    <include>**/*.css</include>
                    <include>**/*.js</include>
                    <include>org/h2/res/help.csv</include>
                    <include>org/h2/res/javadoc.properties</include>
                    <include>org/h2/server/pg/pg_catalog.sql</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/java</directory>
                <includes>
                    <include>org/h2/test/testSimple.in.txt</include>
                    <include>org/h2/test/testScript.sql</include>
                    <include>org/h2/samples/newsfeed.sql</include>
                    <include>org/h2/samples/optimizations.sql</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <verbose>true</verbose>
                    <fork>true</fork>
                    <!-- Compatible with projects with lower java version support, e.g. metabase platon -->
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!-- Add h2tools folder to test sources but consider moving them to src/test -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/tools</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <!--<version>2.4</version>-->
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>org.h2.tools.Console</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <!--<version>2.5</version>-->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!--<version>2.18.1</version>-->
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!--<version>1.6.2</version>-->
                <configuration>
                    <mainClass>org.h2.tools.Console</mainClass>
                    <arguments>
                        <argument>-trace</argument>
                        <argument>-tcp</argument>
                        <argument>-tcpAllowOthers</argument>
                        <argument>-web</argument>
                        <argument>-webAllowOthers</argument>
                    </arguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <scanIntervalSeconds>20</scanIntervalSeconds>
                    <httpConnector>
                        <port>8082</port>
                    </httpConnector>
                    <!--<webApp>-->
                        <!--<contextPath>/console</contextPath>-->
                    <!--</webApp>-->
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
